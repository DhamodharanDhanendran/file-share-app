{"ast":null,"code":"var _jsxFileName = \"D:\\\\file-share-app\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { uploadFile } from \"../API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"application/pdf\"];\n    if (!allowedTypes.includes(selectedFile.type)) {\n      alert(\"File type not allowed\");\n      return;\n    }\n    try {\n      await uploadFile(selectedFile);\n      alert(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setSelectedFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","handleUpload","allowedTypes","includes","type","alert","error","console","children","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/file-share-app/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { uploadFile } from \"../API\";\r\n\r\nconst FileUpload = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) return;\r\n\r\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"application/pdf\"];\r\n    if (!allowedTypes.includes(selectedFile.type)) {\r\n      alert(\"File type not allowed\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await uploadFile(selectedFile);\r\n      alert(\"File uploaded successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={(e) => setSelectedFile(e.target.files[0])} />\r\n      <button onClick={handleUpload} disabled={!selectedFile}>\r\n        Upload\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACF,YAAY,EAAE;IAEnB,MAAMG,YAAY,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,iBAAiB,CAAC;IACnE,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACJ,YAAY,CAACK,IAAI,CAAC,EAAE;MAC7CC,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAI;MACF,MAAMX,UAAU,CAACK,YAAY,CAAC;MAC9BM,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAOQ,IAAI,EAAC,MAAM;MAACK,QAAQ,EAAGC,CAAC,IAAKV,eAAe,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EpB,OAAA;MAAQqB,OAAO,EAAEhB,YAAa;MAACiB,QAAQ,EAAE,CAACnB,YAAa;MAAAS,QAAA,EAAC;IAExD;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5BID,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}